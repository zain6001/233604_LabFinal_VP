@page "/quiz"
<h3>QUIZ</h3>

@code {
    private List<Question> Questions = new List<Question>();
    private int TotalMarks = 0;
    private bool IsSubmitted = false;

    protected override void OnInitialized()
    {
        // Generate 10 specific questions with meaningful options
        var sampleQuestions = new List<(string Text, List<string> Options, string CorrectOption)>
        {
            ("What is 2 + 2?", new List<string> { "3", "4", "5", "6" }, "4"),
            ("What is the capital of France?", new List<string> { "Berlin", "Paris", "London", "Madrid" }, "Paris"),
            ("What color is the sky on a clear day?", new List<string> { "Red", "Blue", "Green", "Yellow" }, "Blue"),
            ("What is 5 * 6?", new List<string> { "25", "30", "35", "40" }, "30"),
            ("What is the boiling point of water (°C)?", new List<string> { "90", "100", "110", "120" }, "100"),
            ("Who wrote 'Hamlet'?", new List<string> { "Charles Dickens", "William Shakespeare", "Mark Twain", "Jane Austen" }, "William Shakespeare"),
            ("What is the square root of 16?", new List<string> { "2", "3", "4", "5" }, "4"),
            ("What is the chemical symbol for gold?", new List<string> { "Ag", "Au", "Pt", "Pb" }, "Au"),
            ("How many continents are there?", new List<string> { "5", "6", "7", "8" }, "7"),
            ("What is the largest planet in our solar system?", new List<string> { "Earth", "Mars", "Jupiter", "Saturn" }, "Jupiter")
        };

        int id = 1;
        foreach (var (text, options, correctOption) in sampleQuestions)
        {
            Questions.Add(new Question
                {
                    Id = id++,
                    Text = text,
                    Options = options,
                    CorrectOption = correctOption
                });
        }
    }

    private void SubmitAnswers()
    {
        if (IsSubmitted) return; // Prevent resubmission

        foreach (var question in Questions)
        {
            if (question.SelectedOption == question.CorrectOption)
            {
                TotalMarks += 5;
            }
        }

        IsSubmitted = true;
    }

    private class Question
    {
        public int Id { get; set; }
        public string Text { get; set; }
        public List<string> Options { get; set; } = new List<string>();
        public string CorrectOption { get; set; } = string.Empty;
        public bool IsAnswered { get; set; } = false;
        public string SelectedOption { get; set; } = string.Empty;
    }
}

<div>
    @if (!IsSubmitted)
    {
        @foreach (var question in Questions)
        {
            <div style="margin-bottom: 20px;">
                <p>@question.Text</p>

                @foreach (var option in question.Options)
                {
                    <button @onclick="() => question.SelectedOption = option" disabled="@question.SelectedOption == option">
                        @option
                    </button>
                }

                @if (!string.IsNullOrEmpty(question.SelectedOption))
                {
                    <p>Selected: @question.SelectedOption</p>
                }
            </div>
        }

        <button @onclick="SubmitAnswers">Submit</button>
    }
    else
    {
        <h4>Total Marks: @TotalMarks</h4>

        @foreach (var question in Questions)
        {
            <div style="margin-bottom: 20px;">
                <p>@question.Text</p>
                <p>Selected: @question.SelectedOption</p>

                @if (question.SelectedOption == question.CorrectOption)
                {
                    <p style="color: green;">Correct!</p>
                }
                else
                {
                    <p style="color: red;">Incorrect. Correct Answer: @question.CorrectOption</p>
                }
            </div>
        }
    }
</div>
